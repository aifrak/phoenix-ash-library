defmodule Library.Repo.Migrations.AddFeedbackComments do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create unique_index(:feedback_reviews, [:id], name: "feedback_reviews_id_index")

    create table(:feedback_comments, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :text, :text, null: false

      add :review_id,
          references(:feedback_reviews,
            column: :id,
            name: "feedback_comments_review_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          ),
          primary_key: true,
          null: false

      add :author_id,
          references(:feedback_authors,
            column: :id,
            name: "feedback_comments_author_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          ),
          primary_key: true,
          null: false
    end
  end

  def down do
    drop constraint(:feedback_comments, "feedback_comments_review_id_fkey")

    drop constraint(:feedback_comments, "feedback_comments_author_id_fkey")

    drop table(:feedback_comments)

    drop_if_exists unique_index(:feedback_reviews, [:id], name: "feedback_reviews_id_index")
  end
end
