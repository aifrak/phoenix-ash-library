defmodule Library.Repo.Migrations.AddMissingUniqueIndexOnId do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create unique_index(:feedback_comments, [:id], name: "feedback_comments_id_index")

    create unique_index(:feedback_authors, [:id], name: "feedback_authors_id_index")

    create unique_index(:catalog_books_authors, [:id], name: "catalog_books_authors_id_index")

    create unique_index(:catalog_books, [:id], name: "catalog_books_id_index")

    create unique_index(:catalog_authors, [:id], name: "catalog_authors_id_index")
  end

  def down do
    drop_if_exists unique_index(:catalog_authors, [:id], name: "catalog_authors_id_index")

    drop_if_exists unique_index(:catalog_books, [:id], name: "catalog_books_id_index")

    drop_if_exists unique_index(:catalog_books_authors, [:id],
                     name: "catalog_books_authors_id_index"
                   )

    drop_if_exists unique_index(:feedback_authors, [:id], name: "feedback_authors_id_index")

    drop_if_exists unique_index(:feedback_comments, [:id], name: "feedback_comments_id_index")
  end
end
